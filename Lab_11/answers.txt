1. TCP порт - 16 битное число. Порт позволяет программам, запущенным на 1 хосте получать данные независимо друг от друга.
2. Сокет - пара IP-port, которая однозначно идентифицирует прикладной процесс ОС.
3. WS - протокол, разработанный поверх TCP, который позволяет передавать данный в дуплексном режиме.
4. Сервер - new WebSocket.Server({port, host, path});
   Клиент - new WebSocket(address);
5. Широковещаетльные - сообщения рассылаются всем устройствам, находящимся в сети. 
6. На клиенте и сервере создается WebSocket.createWebSocketStream({ws, encoding});
    дальше на сревере и клиенте считываем или записываем файл 
    потом делаем pipe.
7. В протоколе встроена проверка соединения через фреймы ping/pong 
Тот, кто хочет проверить соединение отправляет фрейм ping с произвольным телом. Тот кто получил этот фрейм должен
в разумное время ответить фреймом pong с тем же телом.
8. RPC - remote procedure call - удаленный вызов процедур 
9. 1) Уникальная идентификация всех удаленно вызываемых процедур
   2) Идентификация версии RPC протокола
   3) Предоставление механизмов аунтентификации клиента на сервере
   4) Идентификация сообщений ответа 
   5) Идентификация ошибок работы протокола 
10. Издатель отправляет сообщение в topic(тема) откуда оно отправляется всем подписавшимся
11. Создание - подписка - отправка - уведомлене